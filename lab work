//TASK ONE
#include <iostream>
#include <vector>
#include <limits>

int summation(const std::vector<int>& arr) {
    int sum = 0;
    for (int num : arr) {
        sum += num;
    }
    return sum;
}

int maximum(const std::vector<int>& arr) {
    int max = arr[0];
    for (int i = 1; i < arr.size(); ++i) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    return max;
}

int main() {
    int n;
    std::cout << "Enter the length of the array: ";
    std::cin >> n;

    if (n <= 0 || n > std::numeric_limits<int>::max()) {
        std::cout << "Invalid array length\n";
        return 1;
    }

    std::vector<int> arr(n);
    std::cout << "Enter " << n << " integers:\n";
    for (int i = 0; i < n; ++i) {
        std::cin >> arr[i];
    }

    std::cout << "Sum of the integers: " << summation(arr) << std::endl;
    std::cout << "Maximum integer: " << maximum(arr) << std::endl;

    return 0;
}


//Task 2 and 3

#include <iostream>
#include <string>
#include <vector>

// Define Course struct
struct Course {
    std::string courseCode;
    std::string courseName;
};

// Define Grade struct
struct Grade {
    int mark;
    char grade;
};

// Define Student struct
struct Student {
    std::string regNumber;
    std::string name;
    int age;
    Course course;
    std::vector<Grade> grades; // Store multiple grades

    // Function to add marks and calculate grades
    void addMarks(int mark) {
        Grade newGrade;
        newGrade.mark = mark;
        if (mark > 69)
            newGrade.grade = 'A';
        else if (mark > 59)
            newGrade.grade = 'B';
        else if (mark > 49)
            newGrade.grade = 'C';
        else if (mark > 39)
            newGrade.grade = 'D';
        else
            newGrade.grade = 'E';

        grades.push_back(newGrade); // Add new grade to vector
    }
};

int main() {
    // Example usage of Student struct
    Student student;
    student.regNumber = "20230001";
    student.name = "John Doe";
    student.age = 20;
    student.course.courseCode = "CS101";
    student.course.courseName = "Introduction to Programming";
    student.addMarks(85);

    // Display student details
    std::cout << "Student Details:\n";
    std::cout << "Registration Number: " << student.regNumber << std::endl;
    std::cout << "Name: " << student.name << std::endl;
    std::cout << "Age: " << student.age << std::endl;
    std::cout << "Course Code: " << student.course.courseCode << std::endl;
    std::cout << "Course Name: " << student.course.courseName << std::endl;

    // Display all grades
    std::cout << "Grades:\n";
    for (const Grade& grade : student.grades) {
        std::cout << "Mark: " << grade.mark << ", Grade: " << grade.grade << std::endl;
    }

    return 0;
}
